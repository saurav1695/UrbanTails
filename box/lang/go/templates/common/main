// Author : readyGo "JitenP@Outlook.Com"
// This code is generated by readyGo. You are free to make amendments as and where required
package main

import (
	"{{$.config.Project}}/database"
	"{{$.config.Project}}/handlers"
	"github.com/golang/glog"
    "os"
	_"context"
	"github.com/gin-gonic/gin"
)

var (
	// DBConnection is to store database connection information
	DBConnection =  "{{ $.config.DatabaseSpec.ConnectionString }}"
	// DBName is to store database name
	DBName       =  "{{ $.config.DatabaseSpec.DBName }}"
)

func main() {
glog.Info("Application {{$.config.Project}} has started")

if os.Getenv("DB_CONNECTION") != "" {
		DBConnection = os.Getenv("DB_CONNECTION")
	}
	if os.Getenv("DB_NAME") != "" {
		DBName = os.Getenv("DB_NAME")
	}

session, err := database.GetConnection(DBConnection, DBName)
	//defer session.Disconnect(context.TODO())

	if err != nil {
		glog.Fatal("mongodb database is not connected", err)
	}
	
	gin.ForceConsoleColor()

	router := gin.Default()

     {{ range $.config.Models }}
     {{.Name | ToLower}} := new(handlers.{{.Name}})
	 {{.Name | ToLower}}.I{{.Name}} = &database.{{.Name}}DB{DB: session}
     {{.Name | ToLower}}Group := router.Group("/{{$.config.APISpec.Version}}/{{.Name | ToLower}}")
    {
     {{.Name | ToLower}}Group.POST("/create", {{.Name | ToLower}}.Create{{.Name}}())
	 {{.Name | ToLower}}Group.DELETE("/delete/:id", {{.Name | ToLower}}.Delete{{.Name}}ByID())
	 {{.Name | ToLower}}Group.PUT("/update/:id", {{.Name | ToLower}}.Update{{.Name}}ByID())
	 {{.Name | ToLower}}Group.GET("/get/:id", {{.Name | ToLower}}.Get{{.Name}}ByID())
	 {{.Name | ToLower}}Group.GET("/getAll/:skip/:limit", {{.Name | ToLower}}.GetAll{{.Name}}s())
	 {{.Name | ToLower}}Group.GET("/getAllBy/:skip/:limit", {{.Name | ToLower}}.GetAll{{.Name}}sBy())
    }
     {{end}}
    router.Run(":{{$.config.APISpec.Port}}")

}